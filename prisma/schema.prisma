// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulfilld
  shipped
  waiting_shipment
}

enum PhoneModel {
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
}

enum Color {
  black
  blue
  rose
}

enum Material {
  silicone
  polycarbonate
}

enum Finish {
  smooth
  texture
}

model Configuration {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  width           Int
  height          Int
  imageUrl        String
  model           PhoneModel?
  color           Color?
  material        Material?
  finish          Finish?
  croppedImageUrl String?
  order           Order[]
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model Order {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  configurationId   String           @db.ObjectId
  configuration     Configuration    @relation(fields: [configurationId], references: [id])
  userId            String
  user              User             @relation(fields: [userId], references: [userId])
  amount            Float
  isPaid            Boolean          @default(false)
  status            OrderStatus      @default(waiting_shipment)
  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?          @db.ObjectId
  BillingAddress    BillingAddress?  @relation(fields: [billingAddressId], references: [id])
  billingAddressId  String?          @db.ObjectId
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model ShippingAddress {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}
